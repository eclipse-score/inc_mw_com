<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1040</x>
      <y>510</y>
      <w>730</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>mw::com::impl::ServiceDiscovery
--
- runtime_: IRuntime&amp;
- next_free_id: std::size_t
- user_callbacks_: std::unordered_map&lt;FindServiceHandle, FindServiceHandler&gt;
- handle_to_instance_: std::multimap&lt;FindServiceHandle, InstanceIdentifier&gt;
--
+ ServiceDiscovery(IRuntime&amp;)

+ StartFindService(FindServiceHandler handler, InstanceSpecifier specifier): FindServiceHandle
+ StartFindService(FindServiceHandler handler, InstanceIdentifier identifier): FindServiceHandle
+ StartFindService(FindServiceHandler, EnrichedInstanceIdentifier): FindServiceHandle
+ StopFindService(FindServiceHandle)

+ GetInstanceIdentifierFor(FindServiceHandle): std::vector&lt;InstanceIdentifier&gt;

- GetNextHandle(): FindServiceHandle

FoundCallback = amp::callback&lt;void(FindServiceHandle)&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1220</x>
      <y>260</y>
      <w>520</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>/mw::com::impl::IRuntime/
--
- service_discovery_: amp::optional&lt;ServiceDiscovery&gt;
--
/+ resolve(const InstanceSpecifier&amp;) : std::vector&lt;InstanceIdentifier&gt;/
/+ GetServiceDiscovery(): ServiceDiscovery&amp;/
/+ GetBindingRuntime(BindingType binding): IRuntimeBinding*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1960</x>
      <y>800</y>
      <w>680</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lola::ServiceDiscoveryClient
--
- io_notify_: os::IONotify
- search_requests: std::multimap&lt;watch_fd, std::pair&lt;FindServiceHandle, FoundCallback&gt; &gt;
--
+ ServiceDiscoveryClient(concurrency::Executor&amp;)
- InstanceIdentiferToPath(): filesystem::Path
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>600</y>
      <w>600</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/mw::com::impl::IRuntimeBinding/
--
service_discovery_client_: binding::ServiceDiscoveryClient
--
/+ GetServiceDiscoveryClient(): IServiceDiscoveryClient&amp;/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1580</x>
      <y>360</y>
      <w>70</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
create</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>260</y>
      <w>690</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/bmw::mw::com::impl::ProxyBase/
--
+ StartFindService(FindServiceHandler handler, InstanceSpecifier specifier): FindServiceHandle
+ StartFindService(FindServiceHandler handler, InstanceIdentifier identifier): FindServiceHandle
+ StopFindService(FindServiceHandle)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>180</y>
      <w>780</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses: GetServiceDiscovery()</panel_attributes>
    <additional_attributes>760.0;80.0;760.0;20.0;10.0;20.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1130</x>
      <y>820</y>
      <w>550</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>IServiceDiscoveryClient
--
/+ StartFindService(FoundCallback, FindServiceHandle, InstanceIdentifier)/
/+ StopFindService(FindServiceHandle)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1670</x>
      <y>850</y>
      <w>310</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2350</x>
      <y>680</y>
      <w>70</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
create</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1400</x>
      <y>760</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>360</y>
      <w>260</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses:
GetBindingRuntime(BindingType) /
resolve(InstanceSpecifier)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1760</x>
      <y>600</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses:
GetServiceDiscoveryClient()</panel_attributes>
    <additional_attributes>280.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1980</x>
      <y>240</y>
      <w>580</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Note:

Thread:
- Wait for inotify event
- Wake up
- In data Structure watch_fd
- Get watch_fd callbacks and handles from multimap

- iterate:

FoundCallback:
Capture reference to ServiceDiscovery
Argument: FindServiceHandle

Find user_callback with FindServiceHandle
Find respective InstanceIdentifier

Create HandleType

Execute captured FindServiceHandler (user_callback)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2100</x>
      <y>1050</y>
      <w>320</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>os::IONotify
--
+ AddWatch(filesystem::Path): watch_fd
+ RemoveWatch(watch_fd): void
+ WaitForEvent(): watch_fd</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2240</x>
      <y>970</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>420</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>DummyProxy</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>340</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>580</y>
      <w>610</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>/bmw::mw::com::impl::IServiceDiscovery/
--
+ StartFindService(FindServiceHandler, const InstanceSpecifier): FindServiceHandle
+ StartFindService(FindServiceHandler, InstanceIdentifier): FindServiceHandle&gt;
+ StartFindService(FindServiceHandler, EnrichedInstanceIdentifier): FindServiceHandle
+ StopFindService(const FindServiceHandle): ResultBlank</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>900</x>
      <y>630</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
</diagram>
