<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1050</x>
      <y>70</y>
      <w>455</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::InstanceIdentifier
--
+ ToString() const : amp::string_view
--
- InstanceIdentifier(const ServiceInstanceDeployment&amp;, const ServiceTypeDeployment&amp;)
- service_: ServiceIdentifierType* const
- instance_deployment_: ServiceInstanceDeployment* const
- type_deployment_ : ServiceTypeDeployment* const
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1372</x>
      <y>301</y>
      <w>91</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
QualityType
--
kInvalid = 0x00
ASIL_QM = 0x01
ASIL_B = 0x02</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>434</x>
      <y>119</y>
      <w>273</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::HandleType
--
identifier: bmw::mw::com::InstanceIdentifier
additionalInformation: amp::variant&lt;&gt;
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1659</x>
      <y>392</y>
      <w>665</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::SomeIpServiceInstanceDeployment
--
+ instanceId: amp::optional&lt;std::uint16_t&gt; const
--
--
+ ToString() const : std::string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1659</x>
      <y>490</y>
      <w>504</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::LolaServiceInstanceDeployment
--
+ events : std::unordered_map&lt;std::string, LolaEventInstanceDeployment&gt; const
+ fields : std::unordered_map&lt;std::string, LolaFieldInstanceDeployment&gt; const
+ instanceId : amp::optional&lt;std::uint16_t&gt;
+ shared_memory_size : amp::optional&lt;std::size_t&gt;
+ allowed_consumer : std::unordered_map&lt;QualityType, std::vector&lt;uid_t&gt;&gt;
+ allowed_provider : std::unordered_map&lt;QualityType, std::vector&lt;uid_t&gt;&gt;
--
+ LolaServiceInstanceDeployment(instance_id : std::uint16_t, events: EventInstanceMapping)
+ ToString() : std::string const
+ Contains(event_name : const std::string&amp;): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>553</y>
      <w>224</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::ServiceVersionType
--
major: std::uint32_t const
minor: std::uint32_t const
--
operator==();
operator&lt;();
ToString();
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>945</x>
      <y>434</y>
      <w>252</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::ServiceIdentifierType
--
+ version: ServiceVersionType const&amp;
- name: std::string const;
--
+ ServiceIdentifierType(std:string const &amp;name);
+ operator==();
+ operator&lt;();
+ ToString() : std::string const&amp;;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1582</x>
      <y>448</y>
      <w>91</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1582</x>
      <y>511</y>
      <w>91</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>700</x>
      <y>119</y>
      <w>364</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;500.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>812</x>
      <y>686</y>
      <w>602</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::Configuration
--
- service_types : const std::unordered_map&lt;ServiceIdentifierType, ServiceTypeDeployment&gt;
- service_instances : const std::unordered_map&lt;InstanceSpecifier, ServiceInstanceDeployment&gt;
- global_configuration_ : GlobalConfiguration
- tracing_configuration_ : TracingConfiguration
    
--
+ Configuration(ServiceTypeDeployments service_types,
                  ServiceInstanceDeployments service_instances,
                  GlobalConfiguration global_configuration,
                  TracingConfiguration tracing_configuration)
+AddServiceTypeDeployment(ServiceIdentifierType, ServiceTypeDeployment) noexcept : ServiceTypeDeployment* 
+AddServiceInstanceDeployments(InstanceSpecifier, ServiceInstanceDeployment) noexcept : ServiceInstanceDeployment* 

+GetServiceTypes() const noexcept : const ServiceTypeDeployments&amp; 
+GetServiceInstances() const noexcept : const ServiceInstanceDeployments&amp;
+GetGlobalConfiguration() const noexcept : const GlobalConfiguration&amp;
+GetTracingConfiguration() const noexcept : const TracingConfiguration&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1232</x>
      <y>434</y>
      <w>357</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::ServiceInstanceDeployment
--
+ service: ServiceIdentifierType
+ asilLevel: QualityType
+ bindingInfo_ : amp::variant&lt;
                  LolaServiceInstanceDeployment,
                  SomeIpServiceInstanceDeployment,
                  FakeBindingInformation,
                  amp::blank
                  &gt; const
--
+ ServiceInstanceDeployment(service : ServiceIdentifierType const,
                            binding : BindingInformation,
                            asil_level: QualityType const)
+ ToString() : std::string const</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>1057</y>
      <w>301</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Global Functions
--
+ Parse(const amp::string_view path) : Configuration
+ Parse(bmw::json::Any json) : Configuration
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>441</x>
      <y>1183</y>
      <w>147</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>nlhomann::json </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>518</x>
      <y>1106</y>
      <w>42</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>889</y>
      <w>112</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
creates</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;280.0;10.0;280.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1183</x>
      <y>525</y>
      <w>21</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;230.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1274</x>
      <y>602</y>
      <w>21</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1337</x>
      <y>147</y>
      <w>21</w>
      <h>301</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1162</x>
      <y>147</y>
      <w>21</w>
      <h>301</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1064</x>
      <y>525</y>
      <w>21</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>518</x>
      <y>0</y>
      <w>343</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;Proxy&gt;::HandleType
--
Notes: AUTOSAR requires each generated proxy class to
provide a "HandleType" data type. From an instance of
such a type, a proxy instance shall be constructible and
afterwards being able to communicate with the service instance.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>826</x>
      <y>1155</y>
      <w>546</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::Runtime
--
- configuration : Configuration const&amp;
--
- Runtime(std::pair&lt;Configuration&amp;&amp;, amp::optional&lt;tracing::TracingFilterConfig&gt;&amp;&amp;&gt; configs);

_+Initialize() : void_
_+Initialize(const amp::span&lt;const bmw::StringLiteral&gt; arguments) : void_
_+getInstance() : Runtime&amp;_

+ resolve(const InstanceSpecifier&amp;): bmw::mw::com::InstanceIdentifierContainer
+ GetBindingRuntime(const BindingType binding) const : IRuntimeBinding*
+ GetServiceDiscovery() : IServiceDiscovery&amp;
+ GetTracingFilterConfig() const : const tracing::ITracingFilterConfig*
+ GetTracingRuntime() const : tracing::ITracingRuntime*
--
Notes:
AUTOSAR SWS talks about a Runtime singleton in chapter
7.1.2 Design decisions without directly requiring it!
So we embrace the idea here! The only thing which AUTOSAR
really requires in the context of "runtime" is the following
signature:
static bmw::mw::com::runtime::ResolveInstanceIDs(InstanceSpecifier modelName);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>889</y>
      <w>21</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;380.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>651</x>
      <y>1106</y>
      <w>189</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;-

uses in
Initialize</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0;250.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1414</x>
      <y>378</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>546</x>
      <y>63</y>
      <w>84</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
is realized by</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>14</x>
      <y>455</y>
      <w>399</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::LolaServiceTypeDeployment
--
LolaServiceTypeDeployment(service_id : std::uint16_t, events : EventIdMapping)
--
+ serviceId: std::uint16
+ events: std::unordered_map&lt;std::string, LolaElementTypeDeployment&gt;
+ fields: std::unordered_map&lt;std::string, LolaElementTypeDeployment&gt;
--
Notes: Is POD</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>406</x>
      <y>462</y>
      <w>70</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black
</panel_attributes>
    <additional_attributes>80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>14</x>
      <y>595</y>
      <w>399</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::LolaElementTypeDeployment
--
+ id: std::uint8 const
--
+ LolaElementTypeDeployment(id : std::uint8 const) 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>161</x>
      <y>532</y>
      <w>42</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black
m2=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1659</x>
      <y>714</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::LolaEventInstanceDeployment
--
+ max_samples_: std::uint16_t
+ max_subscribers_: std::uint8_t
+ enforce_max_samples_ : amp::optional&lt;bool&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1785</x>
      <y>637</y>
      <w>42</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black
m2=0..1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>868</x>
      <y>532</y>
      <w>21</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>462</x>
      <y>469</y>
      <w>427</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::ServiceTypeDeployment
--
+ ServiceTypeDeployment(lola_deployment : const LolaServiceTypeDeployment)
--
--
Notes: Is POD</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>714</x>
      <y>140</y>
      <w>350</w>
      <h>343</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>480.0;10.0;10.0;10.0;10.0;470.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>399</y>
      <w>77</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;50.0;90.0;10.0;10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>735</x>
      <y>168</y>
      <w>280</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;Generated ara::com ServiceClass&gt;
[]
--
_+serviceIdentifier : ServiceIdentifierType_
_+serviceContractVersionMajor : static std::uint32_t_
_+serviceContractVersionMinor : static std::uint32_t_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>952</x>
      <y>231</y>
      <w>21</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>252</y>
      <w>2352</w>
      <h>861</h>
    </coordinates>
    <panel_attributes>
Package configuration
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2009</x>
      <y>714</y>
      <w>336</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::LolaFieldInstanceDeployment
--
+ max_samples_: std::uint16_t
+ max_subscribers_: std::uint8_t
+ enforce_max_samples_ : amp::optional&lt;bool&gt;
+ is_set_configured: bool
+ is_get_configured: bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2114</x>
      <y>637</y>
      <w>42</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black
m2=0..1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>84</x>
      <y>749</y>
      <w>595</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>bmw::mw::com::impl::TracingConfiguration
--
+ SetTracingEnabled(bool tracing_enabled) noexcept : void 
+ SetApplicationInstanceID(std::string tracing_application_instance_id) noexcept : void
+ SetTracingTraceFilterConfigPath(std::string trace_filter_config_path) noexcept : void
+ IsTracingEnabled() const noexcept : bool
+ GetTracingFilterConfigPath() const noexcept : amp::string_view noexcept
+ GetApplicationInstanceID() const noexcept : amp::string_view
+ SetServiceElementTracingEnabled(tracing::ServiceElementIdentifier service_element_identifier,
                                         InstanceSpecifier instance_specifier) noexcept : void
+ IsServiceElementTracingEnabled(tracing::ServiceElementIdentifierView service_element_identifier_view,
                                        amp::string_view instance_specifier) const noexcept : bool
--
- service_element_tracing_enabled_map_ : std::unordered_map&lt;tracing::ServiceElementIdentifier, std::unordered_set&lt;InstanceSpecifier&gt;&gt;
- tracing_config_ : tracing::TracingConfig </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>763</y>
      <w>154</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>84</x>
      <y>994</y>
      <w>231</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>tracing::TracingConfig
--
+enabled : bool
+application_instance_id : std::string
+trace_filter_config_path : std::string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>217</x>
      <y>917</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1442</x>
      <y>819</y>
      <w>448</w>
      <h>266</h>
    </coordinates>
    <panel_attributes>GlobalConfiguration
--
_constexpr DEFAULT_MIN_NUM_MESSAGES_RX_QUEUE{10} : std::int32_t_
_constexpr DEFAULT_MIN_NUM_MESSAGES_TX_QUEUE{20} : std::int32_t_

+GlobalConfiguration() noexcept
+Configuration(const Configuration&amp; other) = delete;
+GlobalConfiguration(GlobalConfiguration&amp;&amp; other) = default
+operator=(GlobalConfiguration&amp;&amp; other) &amp; = default;

+SetProcessAsilLevel(const QualityType) : void
+SetReceiverMessageQueueSize(QualityType, std::int32_t) noexcept : void
+SetSenderMessageQueueSize(std::int32_t queue_size) noexcept : void
+SetShmSizeCalcMode(const ShmSizeCalculationMode) noexcept : void
+GetReceiverMessageQueueSize(const QualityType) const noexcept : std::int32_t 
+GetSenderMessageQueueSize() const noexcept : std::int32_t
+GetProcessAsilLevel() const : QualityType
+GetShmSizeCalcMode() const noexcept : ShmSizeCalculationMode
--
-process_asil_level_ : QualityType 
-message_rx_queue_size_qm : std::int32_t
-message_rx_queue_size_b : std::int32_t 
-message_tx_queue_size_b : std::int32_t
-shm_size_calc_mode_ : ShmSizeCalculationMode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1407</x>
      <y>735</y>
      <w>140</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0;180.0;120.0</additional_attributes>
  </element>
</diagram>
